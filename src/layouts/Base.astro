---
export interface Props {
  title?: string;
}
import "../styles/global.scss";
import Navbar from "../components/Navbar.astro";
import ProgressiveBlurTop from "../components/ProgressiveBlurTop.astro";
import Footer from "../components/Footer.astro";
const siteTitle = "Pablo Lamela - Portfolio";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Pablo Lamela - Portfolio</title>

    <!-- Inter font (Display via variable font) -->
    <link rel="preconnect" href="https://rsms.me" crossorigin>
    <link rel="stylesheet" href="https://rsms.me/inter/inter.css">
    <meta
      name="description"
      content="Portfolio of Pablo Lamela, UX/UI Product Designer. Digital products, clear interfaces, and visual systems that turn ideas into meaningful impact."
    />
    <meta property="og:title" content="Pablo Lamela" />
    <meta
      property="og:description"
      content="Portfolio of Pablo Lamela, UX/UI Product Designer. Digital products, clear interfaces, and visual systems that turn ideas into meaningful impact."
    />
    <meta property="og:image" content={`${import.meta.env.BASE_URL}og-image.webp`} />
    <meta property="og:type" content="website" />
    <slot name="head" />
  </head>
  <body>
    <Navbar currentPath={Astro.url.pathname} />
    <ProgressiveBlurTop />
    <slot />
    <Footer />
    <script src="https://unpkg.com/lenis@latest/dist/lenis.min.js" defer></script>
    <script>
      addEventListener("load", () => {
        if (matchMedia("(prefers-reduced-motion: reduce)").matches) return;
        const lenis = new window.Lenis({ duration: 1.2, smoothWheel: true });
        function raf(t) {
          lenis.raf(t);
          requestAnimationFrame(raf);
        }
        requestAnimationFrame(raf);
      });
    </script>
    <script type="module" is:inline>
      import setupGravity from "/src/scripts/variable-weight-gravity.ts";
      const initGravity = () => {
        try {
          setupGravity();
        } catch {}
      };
      if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", initGravity, { once: true });
      } else {
        initGravity();
      }
    </script>
  </body>
</html>
